{"name": "test_attach_data", "status": "broken", "statusDetails": {"message": "FileNotFoundError: [Errno 2] No such file or directory: './screenshot.png'", "trace": "def test_attach_data():\n        # Текстовое вложение\n        allure.attach(\"Текст лога\", name=\"log\", attachment_type=allure.attachment_type.TEXT)\n    \n        # Скриншот (пример)\n>       allure.attach.file(\"./screenshot.png\", name=\"Скриншот\", attachment_type=allure.attachment_type.PNG)\n\ntest_aleksandr_lis_class_work_4.py:27: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n..\\..\\venv\\lib\\site-packages\\allure_commons\\_allure.py:182: in file\n    plugin_manager.hook.attach_file(source=source, name=name, attachment_type=attachment_type, extension=extension)\n..\\..\\venv\\lib\\site-packages\\pluggy\\_hooks.py:513: in __call__\n    return self._hookexec(self.name, self._hookimpls.copy(), kwargs, firstresult)\n..\\..\\venv\\lib\\site-packages\\pluggy\\_manager.py:120: in _hookexec\n    return self._inner_hookexec(hook_name, methods, kwargs, firstresult)\n..\\..\\venv\\lib\\site-packages\\allure_pytest\\listener.py:226: in attach_file\n    self.allure_logger.attach_file(uuid4(), source, name=name, attachment_type=attachment_type, extension=extension)\n..\\..\\venv\\lib\\site-packages\\allure_commons\\reporter.py:160: in attach_file\n    plugin_manager.hook.report_attached_file(source=source, file_name=file_name)\n..\\..\\venv\\lib\\site-packages\\pluggy\\_hooks.py:513: in __call__\n    return self._hookexec(self.name, self._hookimpls.copy(), kwargs, firstresult)\n..\\..\\venv\\lib\\site-packages\\pluggy\\_manager.py:120: in _hookexec\n    return self._inner_hookexec(hook_name, methods, kwargs, firstresult)\n..\\..\\venv\\lib\\site-packages\\allure_commons\\logger.py:53: in report_attached_file\n    shutil.copy2(source, destination)\nC:\\Program Files\\Python310\\lib\\shutil.py:434: in copy2\n    copyfile(src, dst, follow_symlinks=follow_symlinks)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nsrc = './screenshot.png'\ndst = 'D:\\\\QA-1024\\\\aleksandr_lis\\\\class_work\\\\results\\\\648645bd-fa3a-4b54-b2d9-92cf2b9bf413-attachment.png'\n\n    def copyfile(src, dst, *, follow_symlinks=True):\n        \"\"\"Copy data from src to dst in the most efficient way possible.\n    \n        If follow_symlinks is not set and src is a symbolic link, a new\n        symlink will be created instead of copying the file it points to.\n    \n        \"\"\"\n        sys.audit(\"shutil.copyfile\", src, dst)\n    \n        if _samefile(src, dst):\n            raise SameFileError(\"{!r} and {!r} are the same file\".format(src, dst))\n    \n        file_size = 0\n        for i, fn in enumerate([src, dst]):\n            try:\n                st = _stat(fn)\n            except OSError:\n                # File most likely does not exist\n                pass\n            else:\n                # XXX What about other special files? (sockets, devices...)\n                if stat.S_ISFIFO(st.st_mode):\n                    fn = fn.path if isinstance(fn, os.DirEntry) else fn\n                    raise SpecialFileError(\"`%s` is a named pipe\" % fn)\n                if _WINDOWS and i == 0:\n                    file_size = st.st_size\n    \n        if not follow_symlinks and _islink(src):\n            os.symlink(os.readlink(src), dst)\n        else:\n>           with open(src, 'rb') as fsrc:\nE           FileNotFoundError: [Errno 2] No such file or directory: './screenshot.png'\n\nC:\\Program Files\\Python310\\lib\\shutil.py:254: FileNotFoundError"}, "attachments": [{"name": "log", "source": "fffa1f20-d66c-4ad2-b807-596e2e1ede29-attachment.txt", "type": "text/plain"}, {"name": "Скриншот", "source": "648645bd-fa3a-4b54-b2d9-92cf2b9bf413-attachment.png", "type": "image/png"}], "start": 1742235510298, "stop": 1742235510299, "uuid": "a0506b5d-af81-41dd-befb-bd96a8427a65", "historyId": "d34ba394587e55bc13a9d8a1cb4a7440", "testCaseId": "273477b33a07267d95343b02666efc11", "fullName": "test_aleksandr_lis_class_work_4#test_attach_data", "labels": [{"name": "suite", "value": "test_aleksandr_lis_class_work_4"}, {"name": "host", "value": "A406PC8"}, {"name": "thread", "value": "8592-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "test_aleksandr_lis_class_work_4"}]}